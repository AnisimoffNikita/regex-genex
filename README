Available on Hackage as: http://hackage.haskell.org/package/regex-genex

The "genex" program finds permutations of strings that matches every
regular expressions specified in the command line.

The output is unsorted, but the order is deterministic across multiple runs:

    $ genex '\d' '[123abc]' # Must match both
    1.00000000              "2"
    1.00000000              "3"
    1.00000000              "1"

To enforce a fixed ordering for alternations, pipe the output to "sort -n":

    $ genex '(-|O){1,3}' | sort -n
    1.00000000              "-"
    1.00000001              "O"
    2.00000002              "--"
    2.00000003              "O-"
    2.00000006              "-O"
    2.00000007              "OO"
    3.00000010              "---"
    3.00000011              "O--"
    3.00000014              "-O-"
    3.00000015              "OO-"
    3.00000026              "--O"
    3.00000027              "O-O"
    3.00000030              "-OO"
    3.00000031              "OOO"

Output is currently capped at 65535 lines, with maximum string length
capped at 255, but both can be raised if needed.

The matches are generated lazily, so it makes sense to use "head -n" to
show only part of its output:

    genex '[abc]+[123]+.+' | head -n 10

Word boundaries and back references are fully supported as well.

Some caveats:

- The * and + quantifiers are turned into {0,3} and {1,4} to make the output
  more unique.
- The set of . \D \W \S characters are limited to printable characters,
  again to make the output more pretty.
- No support yet for \l \u \L \U \Q \E (case and quotemeta modifiers)
- No named Unicode properties or POSIX [[:upper:]] classes yet.

Required Hackage libraries:

    sbv regex-tdfa

Required binary in PATH:

    yices2 # Download it from http://yices.csl.sri.com/download-yices2.shtml

You can directly run the Main.hs in the checkout directory as well:

    runghc Main.hs 'your regex here'

Pre-built MacOSX binaries are in binaries/osx/; try "make test" for a sample run.

Share and enjoy!
Audrey
